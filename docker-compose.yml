version: '3.8'

# Définition des réseaux pour isoler les environnements
networks:
  management_network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.99.10.0/24
  corporate_lan:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.99.0/24
  dmz_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.99.0/24
  iot_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.98.0/24

services:
  # === Machine Kali Linux (Machine d'attaque principale) ===
  kali_linux:
    image: kalilinux/kali-rolling:latest
    container_name: kali_linux
    hostname: kali
    ports:
      - "2222:22"
      - "6080:6080"
    command: bash -c "apt update && apt install -y --no-install-recommends xfce4 xfce4-terminal tigervnc-standalone-server novnc net-tools curl openssh-server && 
            mkdir -p /root/.vnc && echo 'kali' | vncpasswd -f > /root/.vnc/passwd && chmod 600 /root/.vnc/passwd && 
            vncserver :1 -geometry 1280x800 -depth 24 && 
            /usr/share/novnc/utils/launch.sh --vnc localhost:5901 --listen 6080 & 
            tail -f /dev/null"
    networks:
      - management_network
      - corporate_lan

  # === Infrastructure réseau ===
  router:
    image: frrouting/frr:latest
    container_name: router
    hostname: router
    privileged: true
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    # Configuration des ressources pour réduire la consommation
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    networks:
      - corporate_lan
      - dmz_network
      - iot_network
      - management_network
    command: >
      bash -c "sysctl -w net.ipv4.ip_forward=1 && 
              /usr/lib/frr/docker-start"

  # === Workstation Windows simplifiée (Client vulnérable) ===
  windows_client:
    image: alpine:latest  # Version légère avec simulation de Windows
    container_name: windows_client
    hostname: win-client
    # Configuration des ressources pour réduire la consommation
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M
    networks:
      - corporate_lan
    command: >
      sh -c "apk add --no-cache python3 && 
            python3 -m http.server 80 & 
            while true; do sleep 3600; done"  # Keep container running

volumes:
  kali_data:
